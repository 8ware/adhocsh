#! /usr/bin/env bash

BASH_COMPLETION_DIR=/usr/share/bash-completion/completions

ADHOCSH_DATA="${XDG_DATA_HOME:-$HOME/.local/share}/adhocsh"

if [ -z "$ADHOCSH_COMMAND" -o -z "$ADHOCSH_SUBCOMMANDS" ]; then
	echo "Ad-hoc shell command and/or subcommands not specified!" >&2
	cat <<-USAGE >&2
	Usage:

	  ADHOCSH_COMMAND=<command> \\
	  ADHOCSH_SUBCOMMANDS="subcmd1 subcmd2 ..." \\
	  ADHOCSH_COMPLETION=/path/to/bash-completion \\
	  bash --rcfile adhocrc"

	USAGE
	exit 1
fi

# Convert subcommand string to an array
ADHOCSH_SUBCOMMANDS=( $ADHOCSH_SUBCOMMANDS )

ADHOCSH_COMPLETION=${ADHOCSH_COMPLETION:-$BASH_COMPLETION_DIR/$ADHOCSH_COMMAND}
ADHOCSH_COMPLETION_FUNCNAME=${ADHOCSH_COMPLETION_FUNCNAME:-_$ADHOCSH_COMMAND}

PS1="$ADHOCSH_COMMAND> "

ADHOCSH_ENV_PATH=$PATH

# Grab minimal required environment
adhocsh_pin () {
	eval "$(printf '%s () { PATH="%s" "%s" "$@"; }' \
			"$1" "$ADHOCSH_ENV_PATH" "$(which "$1")")"
}
# Pin first level command
adhocsh_pin $ADHOCSH_COMMAND
adhocsh_pin column
unset -f adhocsh_pin

export HISTFILE="$ADHOCSH_DATA/$ADHOCSH_COMMAND.history"
export HISTCONTROL='erasedups'

# Disable mail checks
shopt -u mailwarn

PATH=$ADHOCSH_ENV_PATH source "$ADHOCSH_COMPLETION"

_complete0 () {
	# TODO Wait for 2nd <Tab> to show possible commands (?)

	local line=( $READLINE_LINE )
	local curr=${line[0]}

	if [ ${#line[@]} -gt 1 ]; then
		bind '"\t": complete'
		return
	fi

	local cmds=( $(compgen -W "${ADHOCSH_SUBCOMMANDS[*]}" -- "$curr") )

	if [ ${#cmds[@]} -eq 1 ]; then
		printf -v READLINE_LINE "%s " "${cmds[0]}"
		READLINE_POINT=${#READLINE_LINE}
		# Rebind normal completion (note, that this
		# prevent subsequent command completions)
		bind '"\t": complete'
	else
		echo "$PS1$READLINE_LINE"
		for cmd in "${cmds[@]}"; do
			echo "$cmd"
		done | column
		# TODO Compute common prefix and adjust READLINE_LINE and _POINT
	fi
}
bind -x '"\t": _complete0'
# Rebind command completion
PROMPT_COMMAND="bind -x '\"\\t\": _complete0'"

eval "_adhocsh_$ADHOCSH_COMMAND () {
	COMP_WORDS=( $ADHOCSH_COMMAND \"\${COMP_WORDS[@]}\" )
	COMP_CWORD=\$((COMP_CWORD+1))
	PATH='$ADHOCSH_ENV_PATH' $ADHOCSH_COMPLETION_FUNCNAME
}"

for subcmd in "${ADHOCSH_SUBCOMMANDS[@]}"; do
	# Note, shell keywords like done (taskwarrior) might be aliased
	alias $subcmd="${ADHOCSH_COMMAND} $subcmd"
	complete -o nospace -F "_adhocsh_$ADHOCSH_COMMAND" "$subcmd"
done
unset subcmd

echo "Ad-hoc shell for $ADHOCSH_COMMAND."
echo "Hit Ctrl-D to leave!"

# Bend shell environment last

# Exclude all undesired commands
unset PATH
# command_not_found_handle will not be called since PATH is unset
unset -f command_not_found_handle

