#! /usr/bin/env bash

BASH_COMPLETION_DIR=/usr/share/bash-completion/completions

ADHOCSH_DATA="${XDG_DATA_HOME:-$HOME/.local/share}/adhocsh"
ADHOCSH_CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/adhocsh"

if [ -z "$ADHOCSH_COMMAND" -o -z "$ADHOCSH_SUBCOMMANDS" ]; then
	echo "Ad-hoc shell command and/or subcommands not specified!" >&2
	cat <<-USAGE >&2
	Usage:

	  ADHOCSH_COMMAND=<command> \\
	  ADHOCSH_SUBCOMMANDS="subcmd1 subcmd2 ..." \\
	  ADHOCSH_COMPLETION=/path/to/bash-completion \\
	  bash --rcfile adhocrc"

	USAGE
	exit 1
fi

# Convert subcommand string to an array
ADHOCSH_SUBCOMMANDS=( $ADHOCSH_SUBCOMMANDS )

ADHOCSH_COMPLETION=${ADHOCSH_COMPLETION:-$BASH_COMPLETION_DIR/$ADHOCSH_COMMAND}
ADHOCSH_COMPLETION_FUNCNAME=${ADHOCSH_COMPLETION_FUNCNAME:-_$ADHOCSH_COMMAND}

PS1="$ADHOCSH_COMMAND> "

ADHOCSH_ENV_PATH=$PATH

# Grab minimal required environment
adhocsh_pin () {
	eval "$(printf '%s () { PATH="%s" "%s" "$@"; }' \
			"$1" "$ADHOCSH_ENV_PATH" "$(which "$1")")"
}
adhocsh_pin ln
adhocsh_pin which
adhocsh_pin $ADHOCSH_COMMAND
unset -f adhocsh_pin

ADHOCSH_RUNTIME="$ADHOCSH_CACHE/$ADHOCSH_COMMAND"
mkdir -p "$ADHOCSH_RUNTIME"

# Bend environment to exclude all commands. Note, unsetting the
# PATH variable prevents command_not_found_handle to be called.
PATH=$ADHOCSH_RUNTIME

CMDNOTFOUND=false # Prevent infinite recursion
command_not_found_handle () {
#	echo "Missing command $1."
	"$CMDNOTFOUND" && return 127

	local cmd=$(CMDNOTFOUND=true which "$1")
	ln -sf "$cmd" "$ADHOCSH_RUNTIME/$1"

	CMDNOTFOUND=true "$@"
}

export HISTFILE="$ADHOCSH_DATA/$ADHOCSH_COMMAND.history"
export HISTCONTROL='erasedups'

# Disable mail checks
shopt -u mailwarn

source "$ADHOCSH_COMPLETION"

for subcmd in "${ADHOCSH_SUBCOMMANDS[@]}"; do
	# Note, shell keywords like done (taskwarrior) might be aliased
	alias $subcmd="${ADHOCSH_COMMAND} $subcmd"

	eval "_${ADHOCSH_COMMAND}_$subcmd () {
		COMP_WORDS=( $ADHOCSH_COMMAND \"\${COMP_WORDS[@]}\" )
		COMP_CWORD=\$((COMP_CWORD+1))
		$ADHOCSH_COMPLETION_FUNCNAME
	}"
	complete -o nospace -F "_${ADHOCSH_COMMAND}_$subcmd" "$subcmd"
done
unset subcmd

echo "Ad-hoc shell for $ADHOCSH_COMMAND."
echo "Hit Ctrl-D to leave!"

